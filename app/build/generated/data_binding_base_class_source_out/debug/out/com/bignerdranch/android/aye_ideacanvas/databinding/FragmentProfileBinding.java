// Generated by view binder compiler. Do not edit!
package com.bignerdranch.android.aye_ideacanvas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bignerdranch.android.aye_ideacanvas.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bannerPic;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final BottomNavigationView navbar;

  @NonNull
  public final FragmentContainerView profileContainer;

  @NonNull
  public final TextView profileDesc;

  @NonNull
  public final ImageView profilePfp;

  @NonNull
  public final TextView profileUsername;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView bannerPic,
      @NonNull CardView cardView, @NonNull BottomNavigationView navbar,
      @NonNull FragmentContainerView profileContainer, @NonNull TextView profileDesc,
      @NonNull ImageView profilePfp, @NonNull TextView profileUsername) {
    this.rootView = rootView;
    this.bannerPic = bannerPic;
    this.cardView = cardView;
    this.navbar = navbar;
    this.profileContainer = profileContainer;
    this.profileDesc = profileDesc;
    this.profilePfp = profilePfp;
    this.profileUsername = profileUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bannerPic;
      ImageView bannerPic = ViewBindings.findChildViewById(rootView, id);
      if (bannerPic == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.navbar;
      BottomNavigationView navbar = ViewBindings.findChildViewById(rootView, id);
      if (navbar == null) {
        break missingId;
      }

      id = R.id.profileContainer;
      FragmentContainerView profileContainer = ViewBindings.findChildViewById(rootView, id);
      if (profileContainer == null) {
        break missingId;
      }

      id = R.id.profileDesc;
      TextView profileDesc = ViewBindings.findChildViewById(rootView, id);
      if (profileDesc == null) {
        break missingId;
      }

      id = R.id.profilePfp;
      ImageView profilePfp = ViewBindings.findChildViewById(rootView, id);
      if (profilePfp == null) {
        break missingId;
      }

      id = R.id.profileUsername;
      TextView profileUsername = ViewBindings.findChildViewById(rootView, id);
      if (profileUsername == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, bannerPic, cardView, navbar,
          profileContainer, profileDesc, profilePfp, profileUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
