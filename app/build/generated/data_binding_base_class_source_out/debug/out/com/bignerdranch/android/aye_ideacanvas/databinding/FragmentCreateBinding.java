// Generated by view binder compiler. Do not edit!
package com.bignerdranch.android.aye_ideacanvas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bignerdranch.android.aye_ideacanvas.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton close;

  @NonNull
  public final CreateStandardFrameBinding frame;

  @NonNull
  public final RecyclerView frames;

  @NonNull
  public final ImageView music;

  @NonNull
  public final Button next;

  private FragmentCreateBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton close,
      @NonNull CreateStandardFrameBinding frame, @NonNull RecyclerView frames,
      @NonNull ImageView music, @NonNull Button next) {
    this.rootView = rootView;
    this.close = close;
    this.frame = frame;
    this.frames = frames;
    this.music = music;
    this.next = next;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      ImageButton close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.frame;
      View frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }
      CreateStandardFrameBinding binding_frame = CreateStandardFrameBinding.bind(frame);

      id = R.id.frames;
      RecyclerView frames = ViewBindings.findChildViewById(rootView, id);
      if (frames == null) {
        break missingId;
      }

      id = R.id.music;
      ImageView music = ViewBindings.findChildViewById(rootView, id);
      if (music == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      return new FragmentCreateBinding((ConstraintLayout) rootView, close, binding_frame, frames,
          music, next);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
